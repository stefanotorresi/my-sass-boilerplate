/*
    Document:     _mixins.scss
    Created on:   13-mar-2013, 11.38.18
    Author:       Stefano Torresi (http://stefanotorresi.it)
    Description:  various SASS mixins
*/

@mixin background-alpha($color, $alpha) {
  $rgba: rgba($color, $alpha);
  $ie-hex-str: ie-hex-str($rgba);
  background-color: transparent;
  background-color: $rgba;
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$ie-hex-str},endColorstr=#{$ie-hex-str});
  zoom: 1;
}

@mixin opacity ( $value: 0.5 ) {
  opacity: $value;
  -moz-opacity: $value;
  -khtml-opacity: $value;
  filter: alpha(opactiy=($value * 100));
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$value * 100})";
  zoom: 1;
}

@mixin arrow($direction, $color, $size){
  display: block;
  height: 0;
  width: 0;

  @if $direction == 'top' {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
  } @else if $direction == 'right' {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
  } @else if $direction == 'bottom' {
    border-top: $size solid $color;
    border-right: $size solid transparent;
    border-left: $size solid transparent;
  } @else if $direction == 'left' {
    border-top: $size solid transparent;
    border-right: $size solid $color;
    border-bottom: $size solid transparent;
  } @else if $direction == 'top-left' {
    border-top: $size solid $color;
    border-right: $size solid transparent;
  } @else if $direction == 'top-right' {
    border-top: $size solid $color;
    border-left: $size solid transparent;
  } @else if $direction == 'bottom-left' {
    border-bottom: $size solid $color;
    border-right: $size solid transparent;
  } @else if $direction == 'bottom-right' {
    border-bottom: $size solid $color;
    border-left: $size solid transparent;
  }
}

@mixin respond-to($media) {
  $wideScreen: 1200px;
  $desktop: 992px;
  $tablet: 768px;
  $phone: 480px;

  /**
   * mobile first breakpoints
   */
  @if $media == widescreen or $media == large {
    /* Bootstrap 3 'large' breakpoint */
    @media only screen and (min-width: $wideScreen) { @content; }
  }
  @if $media == desktop or $media == medium {
    /* Bootstrap 3 'medium' breakpoint */
    @media only screen and (min-width: $desktop) { @content; }
  }
  @if $media == tablet or $media == small {
    /* Bootstrap 3 'small' breakpoint */
    @media only screen and (min-width: $tablet) { @content; }
  }

  /**
   * desktop first breakpoints
   */
  @if $media == smaller-than-desktop {
    @media only screen and (max-width: $desktop - 1) { @content; }
  }
  @if $media == smaller-than-desktop-bigger-than-tablet {
    /* Portrait tablet to landscape and desktop */
    @media only screen and (min-width: $tablet + 1) and (max-width: $desktop - 1) { @content; }
  }
  @if $media == smaller-than-tablet {
    /* Landscape phone to portrait tablet */
    @media only screen and (max-width: $tablet - 1) { @content; }
  }
  @if $media == phone {
    /* Landscape phones and down */
    @media only screen and (max-width: $phone) { @content; }
  }
}

@mixin drop-shadow-lifted {
  position: relative;
  background: white;
  &:before,
  &:after {
    position: absolute;
    content: '';
    z-index: -1;
    bottom: 15px;
    left: 10px;
    width: 50%;
    height: 20%;
    max-width: 300px;
    max-height: 100px;
    -webkit-box-shadow: 0 15px 10px rgba(0, 0, 0, 0.3);
    -moz-box-shadow: 0 15px 10px rgba(0, 0, 0, 0.3);
    box-shadow: 0 15px 10px rgba(0, 0, 0, 0.3);
    -webkit-transform: rotate(-3deg);
    -moz-transform: rotate(-3deg);
    -ms-transform: rotate(-3deg);
    -o-transform: rotate(-3deg);
    transform: rotate(-3deg);
  }
  &:after {
    right: 10px;
    left: auto;
    -webkit-transform: rotate(3deg);
    -moz-transform: rotate(3deg);
    -ms-transform: rotate(3deg);
    -o-transform: rotate(3deg);
    transform: rotate(3deg);
  }
}
